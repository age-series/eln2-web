{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to eln2.org Electrical Age 2.0, aka Eln2, is a new version of Electrical Age which is to be written for Minecraft 1.16+. Plans are for the mod to be at least to a playable Alpha state by Fall of 2021, with the work perhaps nearing completion by the end of 2022. These are rough guesses and are honestly pretty optimistic at best. For more information about development plans, please visit the eln2 organization on GitHub .","title":"Home"},{"location":"#welcome-to-eln2org","text":"Electrical Age 2.0, aka Eln2, is a new version of Electrical Age which is to be written for Minecraft 1.16+. Plans are for the mod to be at least to a playable Alpha state by Fall of 2021, with the work perhaps nearing completion by the end of 2022. These are rough guesses and are honestly pretty optimistic at best. For more information about development plans, please visit the eln2 organization on GitHub .","title":"Welcome to eln2.org"},{"location":"development/","text":"Eln 2 development Some tidbits about development. Licensing Eln2 is licensed under the MIT license. Models and artwork need to be under some creative commons license that allows modification and distribution with commercial use, such as this license . Languages Eln2 Core, Apps, and Minecraft Integration is going to be written in Kotlin. Network sockets and shared memory will use Google Protobuffs, and Vintage Story will use C#. The log server uses Rust. Project Structure There are two repositories: eln2 : This is all of the Eln2 code. eln2-web : This is the website you are reading. Inside the eln2 repository, you will find multiple folders: core - All of the core MNA, thermal, and shaft based simulation code. No Minecraft or VS code ends up here. apps - Standalone Applications and daemons. integration-mc<version> - Basically, a Minecraft mod Log collection server For Eln2 pre-alpha development, we will have a crash log handler. What will happen is if the game crashes, we will automatically take the log, and send it out to the development team to a server that can receive these logs and then we can process them. This will aid in development, and will likely be removed at the alpha stage unless we find it useful. At the pre-alpha stage, we will also send the UUID of players so that we know who had the bug. Phases Just a FYI, these will all be copied sooner or later to GitHub Kanban boards, so that it's easier to track progress. There will be a proper set of milestones for this on each of the relevant repositories. Phase 1: Modding Integration [DONE] Core: [x] MNA finished Phase 2: SingleNode [IN PROGRESS] I say models and textures, but these are basic as almost all of these items will be removed/edited later. [ ] Basic Sim API (not mod-integration ready necessarily) [ ] SingleCable: a current based uninsulated cable that connects similarly to RF pipes [ ] SingleSource: a simple voltage source block [ ] SingleGround: a simple ground pin [ ] CreativeHeater: a simple thermal cable heater [ ] Heatsink: a simple heatsink with no fan [ ] Heatsink with a fan: a simple heatsink with a fan (12v, 24W) [ ] SingleSwitch: a current based uninsulated throw switch [ ] SingleResistor: a basic capacitor [ ] SingleCapacitor: a simple capacitor [ ] SingleInductor: a simple inductor [ ] Basic 12v Battery [ ] Shaft Networks: [ ] generator [ ] motor [ ] turbines [ ] clutch [ ] static shaft NOTE: Models are not a priority at this stage as most of the Single* items will be removed later. Log Server: [ ] Centralized log collection server (might be postponed) [ ] config file disclaimer option (disables the mod in un-obfuscated contexts, unless the user agrees to not pester the devs before 1.0) [ ] crash logger code (catch Minecraft crashes?) Phase 3: MultiNode [ ] solar panels [ ] wind turbines [ ] autominer Phase 4: SixNode (Tiny Node if FMB?) [ ] \"New\" SixNode [ ] cables [ ] switches [ ] resistors [ ] inductor [ ] capacitor [ ] lamp sockets [ ] lamp supply [ ] Remove Single* or at least de-list it (shadow registry) Phase 5: Alpha Release and debugging [ ] remove developer disclaimer config [ ] Initial rounds of bug fixing [ ] Some reasonable textures [ ] API v1.0 Stabilization (for mod compatibility) Phase 6: Machines and equipment In no particular order: [ ] mod integration [ ] oredict (items, fluids, gasses) [ ] Machines [ ] crusher [ ] air compressor [ ] experimental teleporter [ ] Woodworking [ ] saw [ ] Metalworking [ ] lathe (electric, shaft) [ ] mill (electric, shaft) [ ] drill press (electric, shaft) [ ] shaper (electric, shaft) [ ] press break (manual, electric, shaft) [ ] english wheel (electric, shaft) [ ] oxy-acetylene torch (gas) [ ] hot riveting machine (electric, shaft) [ ] electric welder (electric) [ ] Industrial Metwalworking [ ] rolling machine (electric, shaft) [ ] forge hammer (electric, shaft) [ ] forge heater (thermal) [ ] Pole update material: [ ] data cables, fiber (Sigbus, OC) [ ] fiber box [ ] 200v, 480v (lower wires) [ ] 16kV (standard height poles) [ ] 125kV power transmission (extra height poles and power transmission) [ ] 220kV power transmission (power transfer towers) [ ] Underground cable transmission [ ] manholes [ ] underground fiber [ ] fiber box [ ] <2kV cables/sigbus [ ] Ground transformer [ ] Steam and Oil Processing [ ] Oil fields [ ] Oil rigs (factorio-esque with diminishing returns) [ ] Oil Processing Tanks [ ] Biofuel Processing [ ] Solar Tower (generates steam from heat) [ ] Nuclear Reactor (generates hot coolant) [ ] Liquid Heat Exchangers (uses hot coolant and water to make steam and cold coolant) [ ]Gas Heat Exchangers - uses exhaust from gas turbines to heat water to make steam","title":"Eln2 Developer Plans"},{"location":"development/#eln-2-development","text":"Some tidbits about development.","title":"Eln 2 development"},{"location":"development/#licensing","text":"Eln2 is licensed under the MIT license. Models and artwork need to be under some creative commons license that allows modification and distribution with commercial use, such as this license .","title":"Licensing"},{"location":"development/#languages","text":"Eln2 Core, Apps, and Minecraft Integration is going to be written in Kotlin. Network sockets and shared memory will use Google Protobuffs, and Vintage Story will use C#. The log server uses Rust.","title":"Languages"},{"location":"development/#project-structure","text":"There are two repositories: eln2 : This is all of the Eln2 code. eln2-web : This is the website you are reading. Inside the eln2 repository, you will find multiple folders: core - All of the core MNA, thermal, and shaft based simulation code. No Minecraft or VS code ends up here. apps - Standalone Applications and daemons. integration-mc<version> - Basically, a Minecraft mod","title":"Project Structure"},{"location":"development/#log-collection-server","text":"For Eln2 pre-alpha development, we will have a crash log handler. What will happen is if the game crashes, we will automatically take the log, and send it out to the development team to a server that can receive these logs and then we can process them. This will aid in development, and will likely be removed at the alpha stage unless we find it useful. At the pre-alpha stage, we will also send the UUID of players so that we know who had the bug.","title":"Log collection server"},{"location":"development/#phases","text":"Just a FYI, these will all be copied sooner or later to GitHub Kanban boards, so that it's easier to track progress. There will be a proper set of milestones for this on each of the relevant repositories.","title":"Phases"},{"location":"development/#phase-1-modding-integration-done","text":"Core: [x] MNA finished","title":"Phase 1: Modding Integration [DONE]"},{"location":"development/#phase-2-singlenode-in-progress","text":"I say models and textures, but these are basic as almost all of these items will be removed/edited later. [ ] Basic Sim API (not mod-integration ready necessarily) [ ] SingleCable: a current based uninsulated cable that connects similarly to RF pipes [ ] SingleSource: a simple voltage source block [ ] SingleGround: a simple ground pin [ ] CreativeHeater: a simple thermal cable heater [ ] Heatsink: a simple heatsink with no fan [ ] Heatsink with a fan: a simple heatsink with a fan (12v, 24W) [ ] SingleSwitch: a current based uninsulated throw switch [ ] SingleResistor: a basic capacitor [ ] SingleCapacitor: a simple capacitor [ ] SingleInductor: a simple inductor [ ] Basic 12v Battery [ ] Shaft Networks: [ ] generator [ ] motor [ ] turbines [ ] clutch [ ] static shaft NOTE: Models are not a priority at this stage as most of the Single* items will be removed later. Log Server: [ ] Centralized log collection server (might be postponed) [ ] config file disclaimer option (disables the mod in un-obfuscated contexts, unless the user agrees to not pester the devs before 1.0) [ ] crash logger code (catch Minecraft crashes?)","title":"Phase 2: SingleNode [IN PROGRESS]"},{"location":"development/#phase-3-multinode","text":"[ ] solar panels [ ] wind turbines [ ] autominer","title":"Phase 3: MultiNode"},{"location":"development/#phase-4-sixnode-tiny-node-if-fmb","text":"[ ] \"New\" SixNode [ ] cables [ ] switches [ ] resistors [ ] inductor [ ] capacitor [ ] lamp sockets [ ] lamp supply [ ] Remove Single* or at least de-list it (shadow registry)","title":"Phase 4: SixNode (Tiny Node if FMB?)"},{"location":"development/#phase-5-alpha-release-and-debugging","text":"[ ] remove developer disclaimer config [ ] Initial rounds of bug fixing [ ] Some reasonable textures [ ] API v1.0 Stabilization (for mod compatibility)","title":"Phase 5: Alpha Release and debugging"},{"location":"development/#phase-6-machines-and-equipment","text":"In no particular order: [ ] mod integration [ ] oredict (items, fluids, gasses) [ ] Machines [ ] crusher [ ] air compressor [ ] experimental teleporter [ ] Woodworking [ ] saw [ ] Metalworking [ ] lathe (electric, shaft) [ ] mill (electric, shaft) [ ] drill press (electric, shaft) [ ] shaper (electric, shaft) [ ] press break (manual, electric, shaft) [ ] english wheel (electric, shaft) [ ] oxy-acetylene torch (gas) [ ] hot riveting machine (electric, shaft) [ ] electric welder (electric) [ ] Industrial Metwalworking [ ] rolling machine (electric, shaft) [ ] forge hammer (electric, shaft) [ ] forge heater (thermal) [ ] Pole update material: [ ] data cables, fiber (Sigbus, OC) [ ] fiber box [ ] 200v, 480v (lower wires) [ ] 16kV (standard height poles) [ ] 125kV power transmission (extra height poles and power transmission) [ ] 220kV power transmission (power transfer towers) [ ] Underground cable transmission [ ] manholes [ ] underground fiber [ ] fiber box [ ] <2kV cables/sigbus [ ] Ground transformer [ ] Steam and Oil Processing [ ] Oil fields [ ] Oil rigs (factorio-esque with diminishing returns) [ ] Oil Processing Tanks [ ] Biofuel Processing [ ] Solar Tower (generates steam from heat) [ ] Nuclear Reactor (generates hot coolant) [ ] Liquid Heat Exchangers (uses hot coolant and water to make steam and cold coolant) [ ]Gas Heat Exchangers - uses exhaust from gas turbines to heat water to make steam","title":"Phase 6: Machines and equipment"},{"location":"library/","text":"library Here, you can find various resources related to the mod that might be useful... MNA/SPICE Resources https://lpsa.swarthmore.edu/Systems/Electrical/mna/MNA1.html Fantastic set of pages documenting how to do MNA. Sample Matlab code provided. http://qucs.sourceforge.net/tech/node14.html Another step-by-step resource for MNA https://en.wikipedia.org/wiki/Two-port_network Important concepts for working on \"fixing\" some issues with \"InterSystem\" https://www.analog.com/en/design-center/simulation-models/spice-models.html Some sample SPICE circuits. Might want to add compatibility later. Real life electrical grid data https://www.swissgrid.ch/en/home.html A cool thing that shows the electric grid in Switzerland! https://www.eirgridgroup.com/the-grid/ Ireland electric grid. Map on the website updated Jan 2020. http://smartgriddashboard.eirgrid.com/ Ireland Smart Grid Dashboard Signal Processing https://en.wikipedia.org/wiki/Kalman_filter It looks like math. Minecraft Coding https://github.com/TheGreyGhost/MinecraftByExample Templates for different Minecraft primitives.","title":"Library"},{"location":"library/#library","text":"Here, you can find various resources related to the mod that might be useful...","title":"library"},{"location":"library/#mnaspice-resources","text":"https://lpsa.swarthmore.edu/Systems/Electrical/mna/MNA1.html Fantastic set of pages documenting how to do MNA. Sample Matlab code provided. http://qucs.sourceforge.net/tech/node14.html Another step-by-step resource for MNA https://en.wikipedia.org/wiki/Two-port_network Important concepts for working on \"fixing\" some issues with \"InterSystem\" https://www.analog.com/en/design-center/simulation-models/spice-models.html Some sample SPICE circuits. Might want to add compatibility later.","title":"MNA/SPICE Resources"},{"location":"library/#real-life-electrical-grid-data","text":"https://www.swissgrid.ch/en/home.html A cool thing that shows the electric grid in Switzerland! https://www.eirgridgroup.com/the-grid/ Ireland electric grid. Map on the website updated Jan 2020. http://smartgriddashboard.eirgrid.com/ Ireland Smart Grid Dashboard","title":"Real life electrical grid data"},{"location":"library/#signal-processing","text":"https://en.wikipedia.org/wiki/Kalman_filter It looks like math.","title":"Signal Processing"},{"location":"library/#minecraft-coding","text":"https://github.com/TheGreyGhost/MinecraftByExample Templates for different Minecraft primitives.","title":"Minecraft Coding"},{"location":"progress/","text":"Progress on Eln2 General progress information about Eln2 development can be found here. 2021 Week 8 (Feb 21 - Feb 27) jrddunbr updated the website by moving the very low traffic #design-plans and #library channels from the Discord to the GitHub issue tracker/Kanban board, and library to library . jrddunbr and Caeleron spent much of Sunday working on various ways to do component testing that can be used to test circuits in the simulator, but also able to be built by our players if they want. We determined that while my 1GS/s oscilloscope is very nice, we determined that using an Arduino would be better, because the oscilloscope has the following shortfalls: Too expensive and obscure for most players to own Not accurate enough in the voltages it can detect Difficult to use and set up the measuring functionality Collects literally 100's of megabytes of data that crashes Excel Week 7 (Feb 14 - 20) The current core devteam is jrddunbr and Caeleron The complete list of interested developers it appears is as follows: jrddunbr - various organization stuff, whatever needs to be done Caeleron - primarily Sim code, but likely node as well Baughn - primarily network serialization CaNiTaR - various code changes Alan F. - various code changes Grissess - Minecraft integration code, maybe jrddunbr updated the website, updated a bunch of various organizational documents, re-targeted efforts for just MC 1.16.5 for the time being, and updated many gradle dependencies. Alan F. fixed the broken ore generation code and fixed drops using loot tables. 2020 Hiatus happened... We worked on 1.7.10 again and did a bunch of work stuff. jrddunbr was unable to work for most of June and by July things lost their prior cadence due to his new job. Week 22 (May 24 - May 30) jrddunbr and Baughn worked on new linting software jrddunbr decided that there isn't really any great project management software out there that does what we need, and settled for GitHub's interface. Grissess and Caeleron worked hard on some MNA hotfixes after discovering that capacitors do not work as intended. Caeleron and jrddunbr are working on the ore processing systems for the game. Week 21 (May 17 - May 23) jrddunbr added the multimeter item (mostly useless) and set up some basic ore generation. Grissess added some documentation to the MNA, worked on internal data structures. Grissess worked on MultiMap Caeleron worked on various documentation and code refactoring jrddunbr worked on finding good project management software Week 20 (May 10 - May 16) Baughn set up protobuffs for the project's communication between the servers and clients. jrddunbr did some organization cleanup, and added new guidelines for contributions. Week 19 (May 3 - May 09) Bit more hiatus Week 18 (April 26 - May 2) A slight hiatus while Caeleron has exams, jrddunbr has interviews. * Baughn updated the codebase to 1.15.2 and included Bookshelf as our UMC replacement. Week 17 (April 19 - April 25) Caeleron worked on uarchComputer Baughn migrated us away from UMC. Baughn wanted something different after working with it briefly. Grissess did some work with the Falstad importer and fixed some other minor MNA bugs. Week 16 (April 12 - April 18) jrddunbr worked on various parsers and the AsmComputer jrddunbr and Caeleron worked on Vintage Story builds using VS Codium, as well as developing the Blueprint Core application Caeleron worked on code cleanup as well as working on a GNU Plot importing system. Baughn continued to work on CI progress and started working on Integration for Minecraft The community voted for Minecraft 1.14 development over Minecraft 1.12 development, after Baughn and jrddunbr noticed that it would be difficult to use Gradle 4.10.3 for any further progress on the project, and thinking that Miinecraft 1.12 did not support Gradle 5 and Forge Gradle 3. We are currently nearing the end of Phase 1. Woo! Baughn pulled in UMC as a Git Subtree. Week 15 (April 5 - April 11) Baughn helped us configure CI using GitHub actions and Caeleron worked on making our standardized tests meet those CI testing requirements. Baughn suggests we set up better tests which Grissess and jrddunbr will do. Baughn and jrddunbr set up the Discord chat on Eln to have new chat rooms for developers. jrddunbr updates the website as there is growing interest in doing Eln2 work. Website was not updated because website development tool was not cooperating. Baughn updated our Gradle configs and also helped us move to Gradle 5 Week 13 - 14 (March 22 - April 4) We discovered Vintage Story is a thing and they have a much better modding API. Caeleron joins the dev team and focuses mostly on making Vintage Story moding work. cam72cam pushes a new UMC release that has a brand new Gradle deployment system that removes the need for special powershell/shell scripts to set up their environment. We have yet to integrate that into our codebase. Week 12 (Mar 15 - Mar 21) Baughn said he has free time coming up, and so we brought him up to speed some on how Eln2 development is going and how to contribute. He suggested we convert to a monorepo, and so we have prepared such a repository . We are still waiting to hear from Grissess and get a concensus on that decision before going with it. Grissess , Baughn , and jrddunbr determined that the repository will be MIT licensed, and we will aim for CC0 or share-alike (commercial friendly). This will be fine, because UMC is LGPLv2.1, which allows us to have a different license so long as we keep our UMC on GitHub basically. There are two scripts in the Integration part of the mod code that are from IR-Integration, and so we may need those few files cleared as MIT to call the whole repo MIT, but we can also just use a license header in those applicable files. Weeks 4-11 (Jan 18 - Mar 14) We were both really busy, and did not have time to develop code. :/ Week 3 (Jan 12 - Jan 18) Grissess works a lot on the MNA solver after jrddunbr tries to do some work but encounters some difficulty with configuring the datatypes efficiently. He also uses a similar methodology to the Falstad solver by having \"stamps\" that modify the matrix from the components. It's worth noting that the old MNA also had the concept of a stamp, and also had some matricies, but the names were a bit.. odd, and difficult to follow. jrddunbr writes a Falstad importer, which can ingest (basic) Falstad circuits and load them into the MNA for processing. Week 2 (Jan 5 - Jan 11) jrddunbr set up a Travis CI page to have a build test on our commits and PR's. Plans are to hopefully have a CD pipeline at some point. cam72cam got back to us about UMC, and we began working to determine how to make UMC generic enough that two completely different mods can use it. Quoting directly from cam72cam on the progress of UMC for newer versions: 1.14.4 still needs support for injecting or generating recipes. I need to work on that at some point or have you two [ jrddunbr and Grissess ] help I have no idea how any of the rendering will be able to be ported to 1.15.x jrddunbr set up the eln2.org website on GitHub Pages, after working with the DNS provider to determine why DNS was not propagating properly to some major resolvers. jrddunbr works on Kotlinizing the sim code Grissess works on figuring out the Gradle import code, turns out it's going to be more difficult than we thought. jrddunbr and Grissess work on determining how to use alternate MNA matrix math providers and make efficient wrappers around different math libraries for benchmarking. Week 1 (Jan 1 - Jan 4) Beginning of the revived Eln2 efforts. Developers are jrddunbr and Grissess On Jan 1, 2020, eln2.org was purchased. This allowed development using the org.eln2.* Java namespace to proceed without suddenly having the domain bought from under our feet. jrddunbr builds a new clean repo for eln2 dev, with just the old mods.eln.sim directory copied on top of a 1.12.2 Forge environment (refactored to org.eln2.sim ) and all Minecraft related methods (eg, NBT) deleted. Eln2 developers guide was created by jrddunbr cam72cam was contacted about Universal Mod Core UMC was selected because: It supports MC 1.12 It is actively developed and maintained It claims that it will support MC 1.14 and MC 1.15 in the near future, and has some decent work to show for it. Grissess and jrddunbr know the developer personally. Grissess worked for three days on figuring out why we were having Gradle issues with importing UMC, but was unable to determine a reliable solution. Builds often failed as below: FAILURE: Build failed with an exception. * What went wrong: Could not determine the dependencies of task ':UniversalModCore:compileJava'. > Could not resolve all task dependencies for configuration ':UniversalModCore:forgeGradleMc'. > Could not find net.minecraftforge:forgeBin:1.12.2-14.23.4.2705. Searched in the following locations: - https://minecraft.curseforge.com/api/maven/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - https://minecraft.curseforge.com/api/maven/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - https://files.minecraftforge.net/maven/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - https://files.minecraftforge.net/maven/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - https://repo.maven.apache.org/maven2/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - https://repo.maven.apache.org/maven2/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - https://libraries.minecraft.net/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - https://libraries.minecraft.net/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - file:/home/travis/.gradle/caches/minecraft/deobfedDeps/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - file:/home/travis/.gradle/caches/minecraft/deobfedDeps/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - file:/home/travis/.gradle/caches/minecraft/net/minecraftforge/forge/1.12.2-14.23.4.2705/snapshot/20171003/forgeBin-1.12.2-14.23.4.2705.jar - file:/home/travis/.gradle/caches/minecraft/net/minecraftforge/forge/1.12.2-14.23.4.2705/snapshot/20171003/forgeBin.jar Required by: project :UniversalModCore","title":"Eln2 Progress"},{"location":"progress/#progress-on-eln2","text":"General progress information about Eln2 development can be found here.","title":"Progress on Eln2"},{"location":"progress/#2021","text":"","title":"2021"},{"location":"progress/#week-8-feb-21-feb-27","text":"jrddunbr updated the website by moving the very low traffic #design-plans and #library channels from the Discord to the GitHub issue tracker/Kanban board, and library to library . jrddunbr and Caeleron spent much of Sunday working on various ways to do component testing that can be used to test circuits in the simulator, but also able to be built by our players if they want. We determined that while my 1GS/s oscilloscope is very nice, we determined that using an Arduino would be better, because the oscilloscope has the following shortfalls: Too expensive and obscure for most players to own Not accurate enough in the voltages it can detect Difficult to use and set up the measuring functionality Collects literally 100's of megabytes of data that crashes Excel","title":"Week 8 (Feb 21 - Feb 27)"},{"location":"progress/#week-7-feb-14-20","text":"The current core devteam is jrddunbr and Caeleron The complete list of interested developers it appears is as follows: jrddunbr - various organization stuff, whatever needs to be done Caeleron - primarily Sim code, but likely node as well Baughn - primarily network serialization CaNiTaR - various code changes Alan F. - various code changes Grissess - Minecraft integration code, maybe jrddunbr updated the website, updated a bunch of various organizational documents, re-targeted efforts for just MC 1.16.5 for the time being, and updated many gradle dependencies. Alan F. fixed the broken ore generation code and fixed drops using loot tables.","title":"Week 7 (Feb 14 - 20)"},{"location":"progress/#2020","text":"Hiatus happened... We worked on 1.7.10 again and did a bunch of work stuff. jrddunbr was unable to work for most of June and by July things lost their prior cadence due to his new job.","title":"2020"},{"location":"progress/#week-22-may-24-may-30","text":"jrddunbr and Baughn worked on new linting software jrddunbr decided that there isn't really any great project management software out there that does what we need, and settled for GitHub's interface. Grissess and Caeleron worked hard on some MNA hotfixes after discovering that capacitors do not work as intended. Caeleron and jrddunbr are working on the ore processing systems for the game.","title":"Week 22 (May 24 - May 30)"},{"location":"progress/#week-21-may-17-may-23","text":"jrddunbr added the multimeter item (mostly useless) and set up some basic ore generation. Grissess added some documentation to the MNA, worked on internal data structures. Grissess worked on MultiMap Caeleron worked on various documentation and code refactoring jrddunbr worked on finding good project management software","title":"Week 21 (May 17 - May 23)"},{"location":"progress/#week-20-may-10-may-16","text":"Baughn set up protobuffs for the project's communication between the servers and clients. jrddunbr did some organization cleanup, and added new guidelines for contributions.","title":"Week 20 (May 10 - May 16)"},{"location":"progress/#week-19-may-3-may-09","text":"Bit more hiatus","title":"Week 19 (May 3 - May 09)"},{"location":"progress/#week-18-april-26-may-2","text":"A slight hiatus while Caeleron has exams, jrddunbr has interviews. * Baughn updated the codebase to 1.15.2 and included Bookshelf as our UMC replacement.","title":"Week 18 (April 26 - May 2)"},{"location":"progress/#week-17-april-19-april-25","text":"Caeleron worked on uarchComputer Baughn migrated us away from UMC. Baughn wanted something different after working with it briefly. Grissess did some work with the Falstad importer and fixed some other minor MNA bugs.","title":"Week 17 (April 19 - April 25)"},{"location":"progress/#week-16-april-12-april-18","text":"jrddunbr worked on various parsers and the AsmComputer jrddunbr and Caeleron worked on Vintage Story builds using VS Codium, as well as developing the Blueprint Core application Caeleron worked on code cleanup as well as working on a GNU Plot importing system. Baughn continued to work on CI progress and started working on Integration for Minecraft The community voted for Minecraft 1.14 development over Minecraft 1.12 development, after Baughn and jrddunbr noticed that it would be difficult to use Gradle 4.10.3 for any further progress on the project, and thinking that Miinecraft 1.12 did not support Gradle 5 and Forge Gradle 3. We are currently nearing the end of Phase 1. Woo! Baughn pulled in UMC as a Git Subtree.","title":"Week 16 (April 12 - April 18)"},{"location":"progress/#week-15-april-5-april-11","text":"Baughn helped us configure CI using GitHub actions and Caeleron worked on making our standardized tests meet those CI testing requirements. Baughn suggests we set up better tests which Grissess and jrddunbr will do. Baughn and jrddunbr set up the Discord chat on Eln to have new chat rooms for developers. jrddunbr updates the website as there is growing interest in doing Eln2 work. Website was not updated because website development tool was not cooperating. Baughn updated our Gradle configs and also helped us move to Gradle 5","title":"Week 15 (April 5 - April 11)"},{"location":"progress/#week-13-14-march-22-april-4","text":"We discovered Vintage Story is a thing and they have a much better modding API. Caeleron joins the dev team and focuses mostly on making Vintage Story moding work. cam72cam pushes a new UMC release that has a brand new Gradle deployment system that removes the need for special powershell/shell scripts to set up their environment. We have yet to integrate that into our codebase.","title":"Week 13 - 14 (March 22 - April 4)"},{"location":"progress/#week-12-mar-15-mar-21","text":"Baughn said he has free time coming up, and so we brought him up to speed some on how Eln2 development is going and how to contribute. He suggested we convert to a monorepo, and so we have prepared such a repository . We are still waiting to hear from Grissess and get a concensus on that decision before going with it. Grissess , Baughn , and jrddunbr determined that the repository will be MIT licensed, and we will aim for CC0 or share-alike (commercial friendly). This will be fine, because UMC is LGPLv2.1, which allows us to have a different license so long as we keep our UMC on GitHub basically. There are two scripts in the Integration part of the mod code that are from IR-Integration, and so we may need those few files cleared as MIT to call the whole repo MIT, but we can also just use a license header in those applicable files.","title":"Week 12 (Mar 15 - Mar 21)"},{"location":"progress/#weeks-4-11-jan-18-mar-14","text":"We were both really busy, and did not have time to develop code. :/","title":"Weeks 4-11 (Jan 18 - Mar 14)"},{"location":"progress/#week-3-jan-12-jan-18","text":"Grissess works a lot on the MNA solver after jrddunbr tries to do some work but encounters some difficulty with configuring the datatypes efficiently. He also uses a similar methodology to the Falstad solver by having \"stamps\" that modify the matrix from the components. It's worth noting that the old MNA also had the concept of a stamp, and also had some matricies, but the names were a bit.. odd, and difficult to follow. jrddunbr writes a Falstad importer, which can ingest (basic) Falstad circuits and load them into the MNA for processing.","title":"Week 3 (Jan 12 - Jan 18)"},{"location":"progress/#week-2-jan-5-jan-11","text":"jrddunbr set up a Travis CI page to have a build test on our commits and PR's. Plans are to hopefully have a CD pipeline at some point. cam72cam got back to us about UMC, and we began working to determine how to make UMC generic enough that two completely different mods can use it. Quoting directly from cam72cam on the progress of UMC for newer versions: 1.14.4 still needs support for injecting or generating recipes. I need to work on that at some point or have you two [ jrddunbr and Grissess ] help I have no idea how any of the rendering will be able to be ported to 1.15.x jrddunbr set up the eln2.org website on GitHub Pages, after working with the DNS provider to determine why DNS was not propagating properly to some major resolvers. jrddunbr works on Kotlinizing the sim code Grissess works on figuring out the Gradle import code, turns out it's going to be more difficult than we thought. jrddunbr and Grissess work on determining how to use alternate MNA matrix math providers and make efficient wrappers around different math libraries for benchmarking.","title":"Week 2 (Jan 5 - Jan 11)"},{"location":"progress/#week-1-jan-1-jan-4","text":"Beginning of the revived Eln2 efforts. Developers are jrddunbr and Grissess On Jan 1, 2020, eln2.org was purchased. This allowed development using the org.eln2.* Java namespace to proceed without suddenly having the domain bought from under our feet. jrddunbr builds a new clean repo for eln2 dev, with just the old mods.eln.sim directory copied on top of a 1.12.2 Forge environment (refactored to org.eln2.sim ) and all Minecraft related methods (eg, NBT) deleted. Eln2 developers guide was created by jrddunbr cam72cam was contacted about Universal Mod Core UMC was selected because: It supports MC 1.12 It is actively developed and maintained It claims that it will support MC 1.14 and MC 1.15 in the near future, and has some decent work to show for it. Grissess and jrddunbr know the developer personally. Grissess worked for three days on figuring out why we were having Gradle issues with importing UMC, but was unable to determine a reliable solution. Builds often failed as below: FAILURE: Build failed with an exception. * What went wrong: Could not determine the dependencies of task ':UniversalModCore:compileJava'. > Could not resolve all task dependencies for configuration ':UniversalModCore:forgeGradleMc'. > Could not find net.minecraftforge:forgeBin:1.12.2-14.23.4.2705. Searched in the following locations: - https://minecraft.curseforge.com/api/maven/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - https://minecraft.curseforge.com/api/maven/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - https://files.minecraftforge.net/maven/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - https://files.minecraftforge.net/maven/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - https://repo.maven.apache.org/maven2/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - https://repo.maven.apache.org/maven2/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - https://libraries.minecraft.net/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - https://libraries.minecraft.net/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - file:/home/travis/.gradle/caches/minecraft/deobfedDeps/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.pom - file:/home/travis/.gradle/caches/minecraft/deobfedDeps/net/minecraftforge/forgeBin/1.12.2-14.23.4.2705/forgeBin-1.12.2-14.23.4.2705.jar - file:/home/travis/.gradle/caches/minecraft/net/minecraftforge/forge/1.12.2-14.23.4.2705/snapshot/20171003/forgeBin-1.12.2-14.23.4.2705.jar - file:/home/travis/.gradle/caches/minecraft/net/minecraftforge/forge/1.12.2-14.23.4.2705/snapshot/20171003/forgeBin.jar Required by: project :UniversalModCore","title":"Week 1 (Jan 1 - Jan 4)"}]}